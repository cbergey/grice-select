gather(measure, value, chosetarget, choseunique, choselure) %>%
group_by(colorasked, searchtype, measure, age_bin) %>%
tidyboot_mean(value)
rt_data <- subjdata %>%
mutate_at(c("rtsearch", "chosetarget"), as.numeric) %>%
filter(rtsearch <= 10000) %>%
mutate(age_bin = case_when(subage <= 4 ~ "<4",
subage <= 6 ~ "5-6",
subage <= 8 ~ "7-8",
T ~ "7+")) %>%
gather(measure, value, chosetarget, choseunique, choselure) %>%
filter(value ==1 ) %>%
group_by(colorasked, searchtype, measure, age_bin) %>%
tidyboot_mean(rtsearch, na.rm = T)
ggplot(mean_data %>% filter(measure == "chosetarget"),
aes(x = colorasked, y = empirical_stat)) +
facet_wrap(~ searchtype) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(.25)) +
theme_classic(base_size = 18)
ggplot(mean_data %>% filter(measure == "chosetarget"),
aes(x = colorasked, y = empirical_stat, color = age_bin)) +
facet_wrap(~ searchtype) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(.25)) +
theme_classic(base_size = 18)
ggplot(mean_data %>% filter(measure == "chosetarget"),
aes(x = age_bin, y = empirical_stat, color = color_asked)) +
facet_wrap(~ searchtype) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(.25)) +
theme_classic(base_size = 18)
ggplot(mean_data %>% filter(measure == "chosetarget"),
aes(x = age_bin, y = empirical_stat, color = colorasked)) +
facet_wrap(~ searchtype) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(.25)) +
theme_classic(base_size = 18)
ggplot(mean_data %>% filter(measure == "chosetarget"),
aes(x = age_bin, y = empirical_stat, color = colorasked)) +
facet_wrap(~ searchtype) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(.25)) +
ylab("chose target") +
theme_classic(base_size = 18)
ggplot(mean_data %>% filter(measure == "choselure"),
aes(x = age_bin, y = empirical_stat, color = colorasked)) +
facet_wrap(~ searchtype) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(.25)) +
ylab("chose target") +
theme_classic(base_size = 18)
ggplot(mean_data %>% filter(measure == "choselure"),
aes(x = age_bin, y = empirical_stat, color = colorasked)) +
facet_wrap(~ searchtype) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(.25)) +
ylab("chose lure") +
theme_classic(base_size = 18)
ggplot(mean_data %>% filter(measure == "choseunique"),
aes(x = age_bin, y = empirical_stat, color = colorasked)) +
facet_wrap(~ searchtype) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(.25)) +
ylab("chose unique") +
theme_classic(base_size = 18)
install.packages("blogdown")
install.packages("blogdown")
blogdown::install_hugo()
library("rjson")
library("jsonlite")
library("purrr")
library(tidyverse)
library(tidyboot)
theme_set(theme_classic(base_size = 18))
raw_data <- read_csv("~/Documents/grice-select/raw_data/ipad/color-quad/rawdata.csv")
setwd("~/Documents/grice-select/raw_data")
raw_data <- read_csv("./ipad/color-quad/rawdata.csv")
raw_data <- read_csv("ipad/color-quad/rawdata.csv")
raw_data <- read_csv("/ipad/color-quad/rawdata.csv")
raw_data <- read_csv("./ipad/color-quad/rawdata.csv")
raw_data <- read_csv("./ipad/color-quad/rawdata.csv")
raw_data <- read_csv("./ipad/color-quad/rawdata.csv")
raw_data <- read_csv("./ipad/color-quad/rawdata.csv")
raw_data <- read_csv("./ipad/scalar-triad/rawdata.csv")
raw_data <- read_csv("./ipad/scalar-triad/rawdata.csv")
View(raw_data)
subjdata <- raw_data %>%
mutate(subid = as.numeric(subid),
age = as.numeric(age)) %>%
filter(subid > 0) %>%
mutate(subid = paste0(date, "_", subid)) %>%
mutate(chosetarget = as.integer(as.logical(chosetarget))) %>%
mutate(choseunique = as.integer(as.logical(choseunique))) %>%
mutate(choselure = as.integer(as.logical(choselure)))
subjs <- subjdata %>%
distinct(subid, .keep_all = T)
subjdata <- raw_data %>%
mutate(subid = as.numeric(subid),
age = as.numeric(age)) %>%
filter(subid > 0) %>%
mutate(subid = paste0(date, "_", subid)) %>%
mutate(chosetarget = as.integer(as.logical(chosetarget))) %>%
mutate(choseunique = as.integer(as.logical(choseunique))) %>%
mutate(choselure = as.integer(as.logical(choselure)))
mutate(target_size = case_when(targetpos == 1 ~ obj1size,
targetpos == 2 ~ obj2size,
T ~ obj3size))
View(raw_data)
raw_data <- read_csv("./ipad/scalar-triad/rawdata.csv")
#
subjdata <- raw_data %>%
mutate(subid = as.numeric(subid),
age = as.numeric(age)) %>%
filter(subid > 0) %>%
mutate(subid = paste0(date, "_", subid)) %>%
mutate(chosetarget = as.integer(as.logical(chosetarget))) %>%
mutate(choseunique = as.integer(as.logical(choseunique))) %>%
mutate(choselure = as.integer(as.logical(choselure)))
#
subjdata <- raw_data %>%
mutate(subid = as.numeric(subid),
age = as.numeric(age)) %>%
filter(subid > 0) %>%
mutate(subid = paste0(date, "_", subid)) %>%
mutate(chosetarget = as.integer(as.logical(chosetarget))) %>%
mutate(choseunique = as.integer(as.logical(choseunique))) %>%
mutate(choselure = as.integer(as.logical(choselure))) %>%
mutate(target_size = case_when(targetpos == 1 ~ obj1size,
targetpos == 2 ~ obj2size,
T ~ obj3size))
raw_data <- read_csv("./ipad/scalar-triad/rawdata.csv")
#
subjdata <- raw_data %>%
mutate(subid = as.numeric(subid),
age = as.numeric(age)) %>%
filter(subid > 0) %>%
mutate(subid = paste0(date, "_", subid)) %>%
mutate(chosetarget = as.integer(as.logical(chosetarget))) %>%
mutate(choseunique = as.integer(as.logical(choseunique))) %>%
mutate(choselure = as.integer(as.logical(choselure))) %>%
mutate(target_size = case_when(targetpos == 1 ~ obj1size,
targetpos == 2 ~ obj2size,
T ~ obj3size))
subjs <- subjdata %>%
distinct(subid, .keep_all = T)
mean_data <- subjdata %>%
mutate(rtsearch = as.numeric(rtsearch)) %>%
#  filter(age >= 5) %>%
# mutate(age_bin = factor(age >= median(subjs$age),
#                         levels = c(FALSE, TRUE),
#                         labels = c("younger", "older"))) %>%
#mutate(age_bin = case_when(subage <= 4 ~ "<4",
#subage <= 6 ~ "5-6",
#T ~ "7+")) %>%
#filter(rtsearch <= rt_extremes$upper &&
#rtsearch >= rt_extremes$lower) %>%
gather(measure, value, chosetarget, choseunique, choselure) %>%
group_by(target_size, sizeasked, searchtype, measure) %>%
tidyboot_mean(value)
ggplot(mean_data %>% filter(measure == "chosetarget"),
aes(x = sizeasked, y = empirical_stat, color = target_size)) +
facet_wrap(~searchtype) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(.25)) +
theme_classic(base_size = 18)
ggplot(mean_data %>% filter(measure == "chosetarget"),
aes(x = sizeasked, y = empirical_stat)) +
facet_wrap(~searchtype) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(.25)) +
theme_classic(base_size = 18)
ggplot(mean_data %>% filter(measure %in% c("chosetarget", "choselure")),
aes(x = sizeasked, y = empirical_stat, fill = measure)) +
facet_grid(target_size~searchtype) +
geom_col(aes(ymin = ci_lower, ymax = ci_upper), position = "stack") +
theme_classic(base_size = 18)
ggplot(mean_data %>% filter(measure == "chosetarget"),
aes(x = sizeasked, y = empirical_stat, color = measure)) +
facet_wrap(~searchtype) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(.25)) +
theme_classic(base_size = 18)
mean_data <- subjdata %>%
mutate(rtsearch = as.numeric(rtsearch)) %>%
#  filter(age >= 5) %>%
# mutate(age_bin = factor(age >= median(subjs$age),
#                         levels = c(FALSE, TRUE),
#                         labels = c("younger", "older"))) %>%
#mutate(age_bin = case_when(subage <= 4 ~ "<4",
#subage <= 6 ~ "5-6",
#T ~ "7+")) %>%
#filter(rtsearch <= rt_extremes$upper &&
#rtsearch >= rt_extremes$lower) %>%
gather(measure, value, chosetarget, choseunique, choselure) %>%
group_by(sizeasked, searchtype, measure) %>%
tidyboot_mean(value)
ggplot(mean_data %>% filter(measure == "chosetarget"),
aes(x = sizeasked, y = empirical_stat)) +
facet_wrap(~searchtype) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(.25)) +
theme_classic(base_size = 18)
ggplot(mean_data %>% filter(measure == "choselure"),
aes(x = sizeasked, y = empirical_stat)) +
facet_wrap(~searchtype) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(.25)) +
theme_classic(base_size = 18)
ggplot(mean_data %>% filter(measure %in% c("chosetarget", "choselure")),
aes(x = sizeasked, y = empirical_stat, fill = measure)) +
facet_grid(target_size~searchtype) +
geom_col(aes(ymin = ci_lower, ymax = ci_upper), position = "stack") +
theme_classic(base_size = 18)
mean_data <- subjdata %>%
mutate(rtsearch = as.numeric(rtsearch)) %>%
#  filter(age >= 5) %>%
# mutate(age_bin = factor(age >= median(subjs$age),
#                         levels = c(FALSE, TRUE),
#                         labels = c("younger", "older"))) %>%
#mutate(age_bin = case_when(subage <= 4 ~ "<4",
#subage <= 6 ~ "5-6",
#T ~ "7+")) %>%
#filter(rtsearch <= rt_extremes$upper &&
#rtsearch >= rt_extremes$lower) %>%
gather(measure, value, chosetarget, choseunique, choselure) %>%
group_by(target_size, sizeasked, searchtype, measure) %>%
tidyboot_mean(value)
ggplot(mean_data %>% filter(measure %in% c("chosetarget", "choselure")),
aes(x = sizeasked, y = empirical_stat, fill = measure)) +
facet_grid(target_size~searchtype) +
geom_col(aes(ymin = ci_lower, ymax = ci_upper), position = "stack") +
theme_classic(base_size = 18)
theme_set(theme_classic(base_size = 18))
ggplot(mean_data %>% filter(measure %in% c("chosetarget", "choselure")),
aes(x = sizeasked, y = empirical_stat, fill = measure)) +
facet_grid(target_size~searchtype) +
geom_col(aes(ymin = ci_lower, ymax = ci_upper), position = "stack") +
theme_classic(base_size = 18)
ggplot(mean_data %>% filter(measure %in% c("chosetarget", "choselure")),
aes(x = sizeasked, y = empirical_stat, fill = measure)) +
facet_grid(target_size~searchtype) +
geom_col(aes(ymin = ci_lower, ymax = ci_upper), position = "stack") +
theme_classic(base_size = 18) + scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))
ggplot(mean_data %>% filter(measure %in% c("chosetarget", "choselure")),
aes(x = sizeasked, y = empirical_stat, fill = measure)) +
facet_grid(target_size~searchtype) +
geom_col(aes(ymin = ci_lower, ymax = ci_upper), position = "stack") +
theme_classic(base_size = 18) + scale_fill_manual(values=c("#f4afa0", "#9fbefd", "#56B4E9"))
ggplot(mean_data %>% filter(measure %in% c("chosetarget", "choselure")),
aes(x = sizeasked, y = empirical_stat, fill = measure)) +
facet_grid(target_size~searchtype) +
geom_col(aes(ymin = ci_lower, ymax = ci_upper), position = "stack") +
theme_classic(base_size = 18) + scale_fill_manual(values=c("#f4afa0", "#ff8566", "#56B4E9"))
ggplot(mean_data %>% filter(measure %in% c("chosetarget", "choselure")),
aes(x = sizeasked, y = empirical_stat, fill = measure)) +
facet_grid(target_size~searchtype) +
geom_col(aes(ymin = ci_lower, ymax = ci_upper), position = "stack") +
theme_classic(base_size = 18) + scale_fill_manual(values=c(#668cff, "#ff8566", "#56B4E9"))
ggplot(mean_data %>% filter(measure %in% c("chosetarget", "choselure")),
aes(x = sizeasked, y = empirical_stat, fill = measure)) +
facet_grid(target_size~searchtype) +
geom_col(aes(ymin = ci_lower, ymax = ci_upper), position = "stack") +
theme_classic(base_size = 18) + scale_fill_manual(values=c("#668cff", "#ff8566", "#56B4E9"))
ggplot(mean_data %>% filter(measure %in% c("chosetarget", "choselure")),
aes(x = sizeasked, y = empirical_stat, fill = measure)) +
facet_grid(target_size~searchtype) +
geom_col(aes(ymin = ci_lower, ymax = ci_upper), position = "stack") +
theme_classic(base_size = 18) + scale_fill_manual(values=c("#668cff", "#ff8566", "#668cff"))
ggplot(mean_data %>% filter(measure %in% c("chosetarget", "choselure")),
aes(x = sizeasked, y = empirical_stat, fill = measure)) +
facet_grid(target_size~searchtype) +
geom_col(aes(ymin = ci_lower, ymax = ci_upper), position = "stack") +
theme_classic(base_size = 18) + scale_fill_manual(values=c("#668cff", "#ff8566", "#668cfa"))
ggplot(mean_data %>% filter(measure %in% c("chosetarget", "choselure")),
aes(x = sizeasked, y = empirical_stat, fill = measure)) +
facet_grid(target_size~searchtype) +
geom_col(aes(ymin = ci_lower, ymax = ci_upper), position = "stack") +
theme_classic(base_size = 18) + scale_fill_manual(values=c("#e8f681", "#8e95fd", "#668cfa"))
ggplot(mean_data %>% filter(measure %in% c("chosetarget", "choselure")),
aes(x = sizeasked, y = empirical_stat, fill = measure)) +
facet_grid(target_size~searchtype) +
geom_col(aes(ymin = ci_lower, ymax = ci_upper), position = "stack") +
theme_classic(base_size = 18) + scale_fill_manual(values=c("#b4f953", "#8e95fd", "#668cfa"))
ggplot(mean_data %>% filter(measure %in% c("chosetarget", "choselure")),
aes(x = sizeasked, y = empirical_stat, fill = measure)) +
facet_grid(target_size~searchtype) +
geom_col(aes(ymin = ci_lower, ymax = ci_upper), position = "stack") +
theme_classic(base_size = 18) + scale_fill_manual(values=c("#3333ff", "#ff5c33", "#668cfa"))
raw_data <- read_csv("./ipad/color-quad/rawdata.csv")
View(raw_data)
subjdata <- raw_data %>%
mutate(subid = as.numeric(subid),
age = as.numeric(age)) %>%
filter(subid > 0) %>%
mutate(subid = paste0(date, "_", subid)) %>%
mutate(chosetarget = as.integer(as.logical(chosetarget))) %>%
mutate(choseunique = as.integer(as.logical(choseunique))) %>%
mutate(choselure = as.integer(as.logical(choselure)))
subjdata <- raw_data %>%
mutate(subid = as.numeric(subid),
subage = as.numeric(subage)) %>%
filter(subid > 0) %>%
mutate(subid = paste0(date, "_", subid)) %>%
mutate(chosetarget = as.integer(as.logical(chosetarget))) %>%
mutate(choseunique = as.integer(as.logical(choseunique))) %>%
mutate(choselure = as.integer(as.logical(choselure)))
subjs <- subjdata %>%
distinct(subid, .keep_all = T)
mean_data <- subjdata %>%
mutate(rtsearch = as.numeric(rtsearch)) %>%
#  filter(age >= 5) %>%
# mutate(age_bin = factor(age >= median(subjs$age),
#                         levels = c(FALSE, TRUE),
#                         labels = c("younger", "older"))) %>%
#mutate(age_bin = case_when(subage <= 4 ~ "<4",
#subage <= 6 ~ "5-6",
#T ~ "7+")) %>%
#filter(rtsearch <= rt_extremes$upper &&
#rtsearch >= rt_extremes$lower) %>%
gather(measure, value, chosetarget, choseunique, choselure) %>%
group_by(colorasked, searchtype, measure) %>%
tidyboot_mean(value)
ggplot(mean_data %>% filter(measure == "chosetarget"),
aes(x = sizeasked, y = empirical_stat)) +
facet_wrap(~searchtype) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(.25)) +
theme_classic(base_size = 18)
ggplot(mean_data %>% filter(measure == "chosetarget"),
aes(x = colorasked, y = empirical_stat)) +
facet_wrap(~searchtype) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(.25)) +
theme_classic(base_size = 18)
ggplot(mean_data %>% filter(measure == "choselure"),
aes(x = colorasked, y = empirical_stat)) +
facet_wrap(~searchtype) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(.25)) +
theme_classic(base_size = 18)
dirs <- c("mturk/color-triad/")
files <- map(dirs, ~list.files(.x, pattern = ".json", full.names = T)) %>%
unlist()
read_grice_file <- function(file) {
json_out <- fromJSON(file)
id <- json_out$WorkerId
raw_data <- json_out$answers$data
#names <- strsplit(raw_data[1], ",")
newnames <- c("subid", "counter", "trialtype", "chosetarget", "choselure", "targetname","chosename", "colorasked", "searchtype","choseunique", "targetshape", "targetcolor", "targetword", "distractorshape1", "distractorshape2", "distractorcolor1", "distractorcolor2", "date", "timestamp", "rtsearch", "targetpos", "lurepos", "placeholder1","placeholder2","placeholder3","placeholder4","placeholder5","placeholder6")
}
read_grice_file <- function(file) {
json_out <- fromJSON(file)
id <- json_out$WorkerId
raw_data <- json_out$answers$data
#names <- strsplit(raw_data[1], ",")
newnames <- c("subid", "counter", "trialtype", "chosetarget", "choselure", "targetname","chosename", "colorasked", "searchtype","choseunique", "targetshape", "targetcolor", "targetword", "distractorshape1", "distractorshape2", "distractorcolor1", "distractorcolor2", "date", "timestamp", "rtsearch", "targetpos", "lurepos", "placeholder1","placeholder2","placeholder3","placeholder4","placeholder5","placeholder6")
data <- raw_data[] %>%
as_data_frame() %>%
separate(value, into = newnames, sep = ",")
data <- data %>%
mutate(subid = id)
}
raw_data <- map(files, read_grice_file) %>%
bind_rows()
warnings()
read_grice_file <- function(file) {
json_out <- fromJSON(file)
id <- json_out$WorkerId
raw_data <- json_out$answers$data
#names <- strsplit(raw_data[1], ",")
newnames <- c("subid", "x","counter", "trialtype", "chosetarget", "choselure", "targetname","chosename", "colorasked", "searchtype","choseunique", "targetshape", "targetcolor", "targetword", "distractorshape1", "distractorshape2", "distractorcolor1", "distractorcolor2", "date", "timestamp", "rtsearch", "targetpos", "lurepos", "obj1shape","obj1color","obj2shape","obj2color","obj3shape","obj3color")
data <- raw_data[] %>%
as_data_frame() %>%
separate(value, into = newnames, sep = ",")
data <- data %>%
mutate(subid = id)
}
dirs <- c("mturk/color-triad/")
files <- map(dirs, ~list.files(.x, pattern = ".json", full.names = T)) %>%
unlist()
raw_data <- map(files, read_grice_file) %>%
bind_rows()
subjdata <- raw_data %>%
mutate(chosetarget = as.integer(as.logical(chosetarget))) %>%
mutate(choseunique = as.integer(as.logical(choseunique))) %>%
mutate(choselure = as.integer(as.logical(choselure)))
subjs <- subjdata %>%
distinct(subid, .keep_all = T)
mean_data <- subjdata %>%
mutate(rtsearch = as.numeric(rtsearch)) %>%
gather(measure, value, chosetarget, choseunique, choselure) %>%
group_by(colorasked, searchtype, measure) %>%
tidyboot_mean(value)
ggplot(mean_data %>% filter(measure == "chosetarget"),
aes(x = colorasked, y = empirical_stat)) +
facet_wrap(~searchtype) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(.25)) +
theme_classic(base_size = 18)
ggplot(mean_data %>% filter(measure == "choselure"),
aes(x = colorasked, y = empirical_stat)) +
facet_wrap(~searchtype) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(.25)) +
theme_classic(base_size = 18)
ggplot(mean_data %>% filter(measure %in% c("chosetarget", "choselure")),
aes(x = sizeasked, y = empirical_stat, fill = measure)) +
facet_grid(target_size~searchtype) +
geom_col(aes(ymin = ci_lower, ymax = ci_upper), position = "stack") +
theme_classic(base_size = 18)
ggplot(mean_data %>% filter(measure %in% c("chosetarget", "choselure")),
aes(x = colorasked, y = empirical_stat, fill = measure)) +
facet_grid(target_size~searchtype) +
geom_col(aes(ymin = ci_lower, ymax = ci_upper), position = "stack") +
theme_classic(base_size = 18)
ggplot(mean_data %>% filter(measure %in% c("chosetarget", "choselure")),
aes(x = colorasked, y = empirical_stat, fill = measure)) +
facet_wrap(~searchtype) +
geom_col(aes(ymin = ci_lower, ymax = ci_upper), position = "stack") +
theme_classic(base_size = 18)
ggplot(mean_data %>% filter(measure %in% c("chosetarget", "choselure")),
aes(x = colorasked, y = empirical_stat, fill = measure)) +
facet_wrap(~searchtype) +
geom_col(aes(ymin = ci_lower, ymax = ci_upper), position = "stack") +
theme_classic(base_size = 18) + scale_fill_manual(values=c("#3333ff", "#ff5c33", "#668cfa"))
dirs <- c("mturk/scalar-triad/")
files <- map(dirs, ~list.files(.x, pattern = ".json", full.names = T)) %>%
unlist()
read_grice_file <- function(file) {
json_out <- fromJSON(file)
id <- json_out$WorkerId
raw_data <- json_out$answers$data
#names <- strsplit(raw_data[1], ",")
newnames <- c("subid", "counter", "trialtype", "chosetarget", "choselure", "targetname","chosename", "sizeasked", "searchtype","choseunique", "targetshape", "targetcolor", "targetword", "distractorshape1", "distractorshape2", "distractorcolor1", "distractorcolor2", "date", "timestamp", "rtsearch", "targetpos", "lurepos", "obj1shape","obj1color","obj2shape","obj2color","obj3shape","obj3color")
data <- raw_data[] %>%
as_data_frame() %>%
separate(value, into = newnames, sep = ",")
data <- data %>%
mutate(subid = id)
#  data <- data[2:2,]
}
raw_data <- map(files, read_grice_file) %>%
bind_rows()
subjdata <- raw_data %>%
mutate(chosetarget = as.integer(as.logical(chosetarget))) %>%
mutate(choseunique = as.integer(as.logical(choseunique))) %>%
mutate(choselure = as.integer(as.logical(choselure)))
subjs <- subjdata %>%
distinct(subid, .keep_all = T)
# for scalar
mean_data <- subjdata %>%
mutate(rtsearch = as.numeric(rtsearch)) %>%
gather(measure, value, chosetarget, choseunique, choselure) %>%
group_by(target_size, sizeasked, searchtype, measure) %>%
tidyboot_mean(value)
# for scalar
mean_data <- subjdata %>%
mutate(rtsearch = as.numeric(rtsearch)) %>%
gather(measure, value, chosetarget, choseunique, choselure) %>%
group_by(sizeasked, searchtype, measure) %>%
tidyboot_mean(value)
ggplot(mean_data %>% filter(measure == "chosetarget"),
aes(x = sizeasked, y = empirical_stat)) +
facet_wrap(~searchtype) +
geom_pointrange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(.25)) +
theme_classic(base_size = 18)
ggplot(mean_data %>% filter(measure %in% c("chosetarget", "choselure")),
aes(x = sizeasked, y = empirical_stat, fill = measure)) +
facet_grid(target_size~searchtype) +
geom_col(aes(ymin = ci_lower, ymax = ci_upper), position = "stack") +
theme_classic(base_size = 18) + scale_fill_manual(values=c("#3333ff", "#ff5c33", "#668cfa"))
ggplot(mean_data %>% filter(measure %in% c("chosetarget", "choselure")),
aes(x = sizeasked, y = empirical_stat, fill = measure)) +
facet_wrap(~searchtype) +
geom_col(aes(ymin = ci_lower, ymax = ci_upper), position = "stack") +
theme_classic(base_size = 18) + scale_fill_manual(values=c("#3333ff", "#ff5c33", "#668cfa"))
raw_data <- read_csv("./ipad/scalar-triad/rawdata.csv")
subjdata <- raw_data %>%
mutate(subid = as.numeric(subid),
age = as.numeric(age)) %>%
filter(subid > 0) %>%
mutate(subid = paste0(date, "_", subid)) %>%
mutate(chosetarget = as.integer(as.logical(chosetarget))) %>%
mutate(choseunique = as.integer(as.logical(choseunique))) %>%
mutate(choselure = as.integer(as.logical(choselure))) %>%
mutate(target_size = case_when(targetpos == 1 ~ obj1size,
targetpos == 2 ~ obj2size,
T ~ obj3size))
subjs <- subjdata %>%
distinct(subid, .keep_all = T)
dirs <- c("mturk/scalar-triad/")
files <- map(dirs, ~list.files(.x, pattern = ".json", full.names = T)) %>%
unlist()
#for scalar
read_grice_file <- function(file) {
json_out <- fromJSON(file)
id <- json_out$WorkerId
raw_data <- json_out$answers$data
#names <- strsplit(raw_data[1], ",")
newnames <- c("subid", "counter", "trialtype", "chosetarget", "choselure", "targetname","chosename", "sizeasked", "searchtype","choseunique", "targetshape", "targetcolor", "targetword", "distractorshape1", "distractorshape2", "distractorcolor1", "distractorcolor2", "date", "timestamp", "rtsearch", "targetpos", "lurepos", "obj1shape","obj1color","obj2shape","obj2color","obj3shape","obj3color")
data <- raw_data[] %>%
as_data_frame() %>%
separate(value, into = newnames, sep = ",")
data <- data %>%
mutate(subid = id)
}
raw_data <- map(files, read_grice_file) %>%
bind_rows()
subjdata <- raw_data %>%
mutate(chosetarget = as.integer(as.logical(chosetarget))) %>%
mutate(choseunique = as.integer(as.logical(choseunique))) %>%
mutate(choselure = as.integer(as.logical(choselure)))
subjs <- subjdata %>%
distinct(subid, .keep_all = T)
raw_data <- read_csv("./ipad/scalar-triad/rawdata.csv")
subjdata <- raw_data %>%
mutate(subid = as.numeric(subid),
age = as.numeric(age)) %>%
filter(subid > 0) %>%
mutate(subid = paste0(date, "_", subid)) %>%
mutate(chosetarget = as.integer(as.logical(chosetarget))) %>%
mutate(choseunique = as.integer(as.logical(choseunique))) %>%
mutate(choselure = as.integer(as.logical(choselure))) %>%
mutate(target_size = case_when(targetpos == 1 ~ obj1size,
targetpos == 2 ~ obj2size,
T ~ obj3size))
subjs <- subjdata %>%
distinct(subid, .keep_all = T)
View(subjs)
